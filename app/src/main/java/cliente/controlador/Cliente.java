package cliente.controlador;/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import cliente.visao.MenuCliente;
import comum.modelo.Mensagem;
import comum.modelo.ProtocoloTransporte;
import comum.visao.menu.Utilitarios;

import java.io.ObjectOutputStream;
import java.net.Socket;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

/**
 * Classe principal do cliente.
 */
public class Cliente {

    /**
     * Endereço IP ou Hostname do servidor.
     */
    public static String enderecoServidor = null;

    /**
     * Porta do servidor.
     */
    public static Integer portaServidor = null;

    /**
     * Protocolo da camada de transporte a ser utilizado na comunicação com o servidor.
     */
    public static ProtocoloTransporte protocoloTransporte = null;

    /**
     * Nome do usuário a enviar mensagem.
     */
    public static String nomeUsuario = null;

    /**
     * Destinatário da mensagem a ser enviada.
     */
    public static String destinatario = null;

    public static boolean programaEmExecucao = true;

    /**
     * Thread responsável por receber mensagem
     */
    public static ControladorMensagens controladorMensagens = null;

    /**
     * Realiza o processo de finalização do cliente.
     */
    private static void finalizar() {
        programaEmExecucao = false;
        controladorMensagens.finalizar();
    }

    private static void configurarInterrupcao() {
        Runtime.getRuntime().addShutdownHook(new Thread(() -> {
            finalizar();
        }));
    }

    /**
     * Método principal do cliente.
     */
    public static void main(String[] args) {
        configurarInterrupcao();
        MenuCliente.configuracaoInicial();
        controladorMensagens = new ControladorMensagens(enderecoServidor, portaServidor, protocoloTransporte, nomeUsuario);
        MenuCliente.menuPrincipal();
        System.out.println("Finalizando o programa");
        finalizar();
    }
}
